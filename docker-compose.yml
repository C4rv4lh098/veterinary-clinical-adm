version: '3'
services:


  # docker container run --name mysqldb --network employee-mysql -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=bootdb -d mysql:8

  frontend-angular:
    image: nginx:1.17.10-alpine
    ports:
      - 20080:80
    volumes:
      - ./frontend-angular/dist/frontend-angular:/usr/share/nginx/html
    # links:
    #   - schedulingservice
  # db:
  #   image: mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   restart: always
  #   environment:
  #     MYSQL_ROOT_PASSWORD=password

  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #           - 8080:8080
# ---------------------
  # db:
  #   image: mysql:8
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     - MYSQL_ROOT_PASSWORD=password
  #     # - MYSQL_DATABASE=bootdb
  #   labels:
  #     - environment:development
  #   networks:
  #     - scheduling-mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    depends_on:
      - db
    ports:
      - "8888:80"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=dbclinic 
    links:
      - db 
  #   networks:
  #     - scheduling-mysql
  # # -----------------------------------
  #   labels:
  #     - environment:development

  db:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    command: --init-file /init.sql
    ports:
      - '3306:3306'
    environment:
      # - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=dbclinic
      # - MYSQL_USER=root
      - MYSQL_ROOT_PASSWORD=password
      # - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./docker/volume_mysql:/var/lib/mysql
      - ./init.sql:/init.sql


    # environment:
    #   - ADDITIONAL_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m
    #   - PROFILE=dev

  # networks:
  #   scheduling-mysql:
  #     driver: bridge

  
  # schedulingservice:
  #   build:
  #     context: ./
  #     dockerfile: ./schedulingservice/Dockerfile
  #   image: schedulingservice/api

  #   ports:
  #     - "8081:8081"
  #     - "5056:5006"
  #   volumes:
  #     - "./schedulingservice:/home/schedulingservice"
  #   environment:
  #     - ADDITIONAL_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m
  #     - PROFILE=dev
  #   links:
  #     - db

  # agendamento:
  #   build:
  #     context: ./
  #     dockerfile: ./agendamento/Dockerfile
  #   image: agendamento/api

  #   ports:
  #     - "8080:8080"
  #     - "5005:5005"
  #   volumes:
  #     - "./agendamento:/home/agendamento"
  #   environment:
  #     - ADDITIONAL_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m
  #     - PROFILE=dev
  #   links:
  #     - db
    # tty: true
  
  # registerservice:
  #   build:
  #     context: ./
  #     dockerfile: ./register/Dockerfile
  #   image: register/api

  #   ports:
  #     - "8082:8082"
  #     - "5007:5007"
  #   volumes:
  #     - "./register:/home/register"
  #   environment:
  #     - ADDITIONAL_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xmx1G -Xms128m -XX:MaxMetaspaceSize=128m
  #     - PROFILE=dev
  #   links:
  #     - db
      
 
